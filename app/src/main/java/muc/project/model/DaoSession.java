package muc.project.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import muc.project.model.Client;
import muc.project.model.History;
import muc.project.model.AccessPoint;
import muc.project.model.Client_AccessPoint;

import muc.project.model.ClientDao;
import muc.project.model.HistoryDao;
import muc.project.model.AccessPointDao;
import muc.project.model.Client_AccessPointDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig clientDaoConfig;
    private final DaoConfig historyDaoConfig;
    private final DaoConfig accessPointDaoConfig;
    private final DaoConfig client_AccessPointDaoConfig;

    private final ClientDao clientDao;
    private final HistoryDao historyDao;
    private final AccessPointDao accessPointDao;
    private final Client_AccessPointDao client_AccessPointDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        clientDaoConfig = daoConfigMap.get(ClientDao.class).clone();
        clientDaoConfig.initIdentityScope(type);

        historyDaoConfig = daoConfigMap.get(HistoryDao.class).clone();
        historyDaoConfig.initIdentityScope(type);

        accessPointDaoConfig = daoConfigMap.get(AccessPointDao.class).clone();
        accessPointDaoConfig.initIdentityScope(type);

        client_AccessPointDaoConfig = daoConfigMap.get(Client_AccessPointDao.class).clone();
        client_AccessPointDaoConfig.initIdentityScope(type);

        clientDao = new ClientDao(clientDaoConfig, this);
        historyDao = new HistoryDao(historyDaoConfig, this);
        accessPointDao = new AccessPointDao(accessPointDaoConfig, this);
        client_AccessPointDao = new Client_AccessPointDao(client_AccessPointDaoConfig, this);

        registerDao(Client.class, clientDao);
        registerDao(History.class, historyDao);
        registerDao(AccessPoint.class, accessPointDao);
        registerDao(Client_AccessPoint.class, client_AccessPointDao);
    }
    
    public void clear() {
        clientDaoConfig.getIdentityScope().clear();
        historyDaoConfig.getIdentityScope().clear();
        accessPointDaoConfig.getIdentityScope().clear();
        client_AccessPointDaoConfig.getIdentityScope().clear();
    }

    public ClientDao getClientDao() {
        return clientDao;
    }

    public HistoryDao getHistoryDao() {
        return historyDao;
    }

    public AccessPointDao getAccessPointDao() {
        return accessPointDao;
    }

    public Client_AccessPointDao getClient_AccessPointDao() {
        return client_AccessPointDao;
    }

}
